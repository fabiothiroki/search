{"version":3,"sources":["services/constants.js","services/Flight/flightService.js","services/Flight/flightResponseFormatter.js","components/FlightCard/FlightCard.js","components/SearchResults/SearchResults.js","services/Airport/airportService.js","services/Airport/airportResponseFormatter.js","components/AirportSelector/AirportSelector.js","components/Search/constants.js","components/Search/Search.js","services/Airport/searchResultsFormatter.js","components/App/App.js","index.js"],"names":["API_BASE_URL","getFlights","parameters","Promise","resolve","params","URLSearchParams","fly_from","fly_to","dateFrom","dateTo","return_from","return_to","partner","limit","fetch","toString","then","response","json","flightResponseFormatter","flights","data","map","flight","id","flyFrom","cityFrom","flyTo","cityTo","price","currency","departureDate","Date","dTimeUTC","toLocaleString","arrivalDate","aTimeUTC","FlightCard","Card","variant","CardContent","Typography","component","color","SearchResults","searchParameters","useQuery","isLoading","LinearProgress","defaultProps","getAirportsByTerm","searchTerm","formatAirportResults","results","selectedAirport","formattedData","push","locations","concat","throttled","throttle","AirportSelector","inputLabel","onChange","nameIdentifier","useState","inputValue","setInputValue","setSelectedAirport","Autocomplete","options","getOptionLabel","option","name","renderInput","TextField","label","onInputChange","_event","newInputValue","_e","airport","value","FORM_FIELDS","ORIGIN","DESTINATION","DEPARTURE_DATE","RETURN_DATE","useStyles","makeStyles","theme","paper","marginTop","spacing","form","width","submit","margin","formLine","Search","onSearchSubmitted","classes","useForm","control","handleSubmit","setValue","errors","formState","className","onSubmit","noValidate","Grid","container","item","xs","sm","defaultValue","rules","required","render","field","type","style","InputLabelProps","shrink","inputProps","Button","data-testid","fullWidth","dateFormatter","dateString","toJSON","slice","split","reverse","join","searchResultsFormatter","origin","code","destination","returnDate","App","setSearchParameters","Container","maxWidth","CssBaseline","search","memo","queryClient","QueryClient","ReactDOM","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.626433a6.chunk.js","sourcesContent":["const API_BASE_URL = \"https://api.skypicker.com\";\n\nexport default API_BASE_URL;\n","// @flow\n\nimport API_BASE_URL from \"../constants\";\n\nconst defaultPartner = \"skypicker\";\n\nconst getFlights = (\n  parameters: ?SearchParametersFormatted\n): Promise<?FlightSearchResponse> => {\n  if (!parameters) {\n    return Promise.resolve(null);\n  }\n\n  const params = new URLSearchParams({\n    fly_from: parameters.fly_from,\n    fly_to: parameters.fly_to,\n    dateFrom: parameters.dateFrom,\n    dateTo: parameters.dateTo,\n    return_from: parameters.return_from,\n    return_to: parameters.return_to,\n    partner: defaultPartner,\n    limit: \"10\",\n  });\n\n  return fetch(\n    `${API_BASE_URL}/flights?${params.toString()}`\n  ).then((response) => response.json());\n};\n\nexport default getFlights;\n","// @flow\n\nconst flightResponseFormatter = (flights: {\n  currency: string,\n  data: Array<{\n    id: string,\n    flyFrom: string,\n    cityFrom: string,\n    cityTo: string,\n    flyTo: string,\n    price: string,\n    dTimeUTC: number,\n    aTimeUTC: number,\n  }>,\n}): ?Array<Flight> => {\n  if (!flights) {\n    return null;\n  }\n\n  return flights.data.map((flight) => ({\n    id: flight.id,\n    flyFrom: flight.flyFrom,\n    cityFrom: flight.cityFrom,\n    flyTo: flight.flyTo,\n    cityTo: flight.cityTo,\n    price: `${flight.price} ${flights.currency}`,\n    departureDate: new Date(flight.dTimeUTC * 1000).toLocaleString(),\n    arrivalDate: new Date(flight.aTimeUTC * 1000).toLocaleString(),\n  }));\n};\n\nexport default flightResponseFormatter;\n","import CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\n\ntype Props = {\n  cityFrom: string,\n  cityTo: string,\n  departureDate: string,\n  arrivalDate: string,\n  price: string,\n};\n\nconst FlightCard = ({\n  cityFrom,\n  cityTo,\n  departureDate,\n  arrivalDate,\n  price,\n}: Props) => (\n  <Card variant=\"outlined\">\n    <CardContent>\n      <Typography variant=\"subtitle1\" component=\"p\">\n        From:\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {cityFrom} - {departureDate}\n      </Typography>\n      <Typography variant=\"subtitle1\" component=\"p\">\n        To:\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {cityTo} - {arrivalDate}\n      </Typography>\n      <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n        <b>{price}</b>\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default FlightCard;\n","import { useQuery } from \"react-query\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport getFlights from \"../../services/Flight/flightService\";\nimport flightResponseFormatter from \"../../services/Flight/flightResponseFormatter\";\nimport FlightCard from \"../FlightCard/FlightCard\";\n\ntype Props = {\n  searchParameters?: SearchParametersFormatted,\n};\n\nconst SearchResults = ({ searchParameters }: Props) => {\n  const { data, isLoading } = useQuery(\n    [\"flightData\", { searchParameters }],\n    () => getFlights(searchParameters).then(flightResponseFormatter)\n  );\n\n  if (isLoading) {\n    return <LinearProgress />;\n  }\n\n  if (!data) {\n    return (\n      <Typography variant=\"body1\" component=\"p\">\n        Find cheap flights\n      </Typography>\n    );\n  }\n\n  return data.map((flight) => (\n    <FlightCard\n      key={flight.id}\n      cityFrom={flight.cityFrom}\n      cityTo={flight.cityTo}\n      departureDate={flight.departureDate}\n      arrivalDate={flight.arrivalDate}\n      price={flight.price}\n    />\n  ));\n};\n\nSearchResults.defaultProps = {\n  searchParameters: null,\n};\n\nexport default SearchResults;\n","// @flow\n\nimport API_BASE_URL from \"../constants\";\n\nconst getAirportsByTerm = (\n  searchTerm: string\n): Promise<{ locations?: Array<Airport> }> =>\n  fetch(\n    `${API_BASE_URL}/locations?location_types=airport&term=${searchTerm}`\n  ).then((response) => response.json());\n\nexport default getAirportsByTerm;\n","// @flow\n\nconst formatAirportResults = (\n  results?: { locations?: Array<Airport> },\n  selectedAirport: Airport\n): Airport[] => {\n  const formattedData = [];\n\n  if (selectedAirport) {\n    formattedData.push(selectedAirport);\n  }\n\n  if (results && results.locations) {\n    return formattedData.concat(results.locations);\n  }\n\n  return formattedData;\n};\n\nexport default formatAirportResults;\n","import { useState } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport throttle from \"lodash.throttle\";\nimport { useQuery } from \"react-query\";\nimport getAirportsByTerm from \"../../services/Airport/airportService\";\nimport formatAirportResults from \"../../services/Airport/airportResponseFormatter\";\n\nconst throttled = throttle((searchTerm) => getAirportsByTerm(searchTerm), 200);\n\ntype Props = {\n  inputLabel: string,\n  onChange: (name: string, airport: Airport) => void,\n  nameIdentifier: string,\n};\n\nconst AirportSelector = ({ inputLabel, onChange, nameIdentifier }: Props) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedAirport, setSelectedAirport] = useState(null);\n\n  const { data } = useQuery(\n    [\"airportData\", { inputValue, selectedAirport }],\n    () => throttled(inputValue)\n  );\n  return (\n    <Autocomplete\n      options={formatAirportResults(data, selectedAirport)}\n      getOptionLabel={(option) => option.name}\n      renderInput={(params) => (\n        <TextField {...params} label={inputLabel} variant=\"outlined\" />\n      )}\n      onInputChange={(_event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      onChange={(_e, airport) => {\n        setSelectedAirport(airport);\n        onChange(nameIdentifier, airport);\n      }}\n      value={selectedAirport}\n    />\n  );\n};\n\nexport default AirportSelector;\n","const FORM_FIELDS = {\n  ORIGIN: \"origin\",\n  DESTINATION: \"destination\",\n  DEPARTURE_DATE: \"departureDate\",\n  RETURN_DATE: \"returnDate\",\n};\n\nexport default FORM_FIELDS;\n","import Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AirportSelector from \"../AirportSelector/AirportSelector\";\nimport FORM_FIELDS from \"./constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n  },\n  form: {\n    width: \"100%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formLine: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype Props = {\n  onSearchSubmitted: (searchParameters: SearchParameters) => void,\n};\n\nconst Search = ({ onSearchSubmitted }: Props) => {\n  const classes = useStyles();\n  const {\n    control,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => onSearchSubmitted(data);\n\n  return (\n    <div className={classes.paper}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Search Flights\n      </Typography>\n\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\n        <Grid container spacing={2} className={classes.formLine}>\n          <Grid item xs={12} sm={6}>\n            <Controller\n              name={FORM_FIELDS.ORIGIN}\n              control={control}\n              defaultValue={null}\n              rules={{ required: true }}\n              render={() => (\n                <AirportSelector\n                  nameIdentifier={FORM_FIELDS.ORIGIN}\n                  inputLabel=\"From\"\n                  onChange={setValue}\n                />\n              )}\n            />\n            {errors[FORM_FIELDS.DESTINATION] && \"From is required\"}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Controller\n              name={FORM_FIELDS.DESTINATION}\n              control={control}\n              defaultValue={null}\n              rules={{ required: true }}\n              render={() => (\n                <AirportSelector\n                  nameIdentifier={FORM_FIELDS.DESTINATION}\n                  inputLabel=\"To\"\n                  onChange={setValue}\n                />\n              )}\n            />\n            {errors[FORM_FIELDS.DESTINATION] && \"To is required\"}\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={2} className={classes.formLine}>\n          <Grid item xs={12} sm={6}>\n            <Controller\n              name={FORM_FIELDS.DEPARTURE_DATE}\n              control={control}\n              defaultValue=\"\"\n              rules={{ required: true }}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  name={FORM_FIELDS.DEPARTURE_DATE}\n                  label=\"Departure\"\n                  type=\"date\"\n                  style={{ width: \"100%\" }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  inputProps={{\n                    \"data-testid\": FORM_FIELDS.DEPARTURE_DATE,\n                  }}\n                  onChange={onChange}\n                  value={value}\n                />\n              )}\n            />\n            {errors[FORM_FIELDS.DEPARTURE_DATE] && \"Departure date is required\"}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Controller\n              name={FORM_FIELDS.RETURN_DATE}\n              control={control}\n              defaultValue=\"\"\n              rules={{ required: true }}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  name={FORM_FIELDS.RETURN_DATE}\n                  label=\"Return\"\n                  type=\"date\"\n                  style={{ width: \"100%\" }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  inputProps={{\n                    \"data-testid\": FORM_FIELDS.RETURN_DATE,\n                  }}\n                  onChange={onChange}\n                  value={value}\n                />\n              )}\n            />\n            {errors[FORM_FIELDS.RETURN_DATE] && \"Return date is required\"}\n          </Grid>\n        </Grid>\n\n        <Button\n          data-testid=\"submitButton\"\n          className={classes.submit}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Search\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","// @flow\n\nconst dateFormatter = (dateString: string): string =>\n  new Date(dateString).toJSON().slice(0, 10).split(\"-\").reverse().join(\"/\");\n\nconst searchResultsFormatter = (\n  parameters: SearchParameters\n): SearchParametersFormatted => ({\n  fly_from: parameters.origin?.code,\n  fly_to: parameters.destination?.code,\n  dateFrom: dateFormatter(parameters.departureDate),\n  dateTo: dateFormatter(parameters.departureDate),\n  return_from: dateFormatter(parameters.returnDate),\n  return_to: dateFormatter(parameters.returnDate),\n});\n\nexport default searchResultsFormatter;\n","import { memo, useState } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\n\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Search from \"../Search/Search\";\nimport searchResultsFormatter from \"../../services/Airport/searchResultsFormatter\";\n\nconst App = () => {\n  const [searchParameters, setSearchParameters] = useState(null);\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <CssBaseline />\n      <Search\n        onSearchSubmitted={(search) =>\n          setSearchParameters(searchResultsFormatter(search))\n        }\n      />\n      <SearchResults searchParameters={searchParameters} />\n    </Container>\n  );\n};\n\nexport default memo(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport App from \"./components/App/App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}